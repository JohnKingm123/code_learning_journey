Python3 JSON 资料解析 - Python3教学
入门教学 -- 学的不仅是技术，更是梦想！
首页
HTML
CSS
JavaScript
jQuery
Python3
Python2
Java
C
C++
Go
SQL
首页
HTML
Search
Python3教学
Python3 教程 Python3 简介 Python3 环境搭建 Python3 基础语法 Python3 基本资料型别 Python3 直译器 Python3 注释 Python3 运算子 Python3 数字(Number) Python3 字串 Python3 列表 Python3 元组 Python3 字典 Python3 集合 Python3 程式设计第一步 Python3 条件控制 Python3 循环语句 Python3 迭代器与生成器 Python3 函式 Python3 资料结构 Python3 模组 Python3 输入和输出 Python3 File 方法 Python3 OS 档案/目录方法 Python3 错误和异常 Python3 面向物件 Python3 名称空间和作用域 Python3 标准库概览 Python3 例项 Python3 正则表示式 Python3 CGI程式设计 Python MySQL – mysql-connector 驱动 Python3 MySQL 数据库连线 – PyMySQL 驱动 Python3 网络程式设计 Python3 SMTP传送邮件 Python3 多执行绪 Python3 XML 解析 Python3 JSON 资料解析 Python3 日期和时间 Python3 内建函式 Python MongoDB Python urllib Python uWSGI 安装配置
ads
HTML 基础
Python3 JSON 资料解析
Python3 JSON 资料解析
JSON (JavaScript Object Notation) 是一种轻量级的资料交换格式。
如果你还不了解 JSON，可以先阅读我们的 JSON 教程。
Python3 中可以使用 json 模组来对 JSON 资料进行编解码，它包含了两个函式：
json.dumps(): 对资料进行编码。
json.loads(): 对资料进行解码。
在j son 的编解码过程中，Python 的原始型别与 json 型别会相互转换，具体的转化对照如下：
Python 编码为 JSON 型别转换对应表：
Python
JSON
dict
object
list, tuple
array
str
string
int, float, int- & float-derived Enums
number
True
true
False
false
None
null
JSON 解码为 Python 型别转换对应表：
JSON
Python
object
dict
array
list
string
str
number (int)
int
number (real)
float
true
True
false
False
null
None
json.dumps 与 json.loads 例项
以下例项演示了 Python 资料结构转换为JSON：
例项(Python 3.0+)
#!/usr/bin/python3 import json # Python 字典型别转换为 JSON 物件 data = { 'no' : 1, 'name' : 'itread01', 'url' : 'http://www.itread01.com' } json_str = json.dumps(data) print ("Python 原始资料：", repr(data)) print ("JSON 物件：", json_str)
执行以上程式码输出结果为：
Python 原始资料： {'url': 'http://www.itread01.com', 'no': 1, 'name': 'itread01'} JSON 物件： {"url": "http://www.itread01.com", "no": 1, "name": "itread01"}
通过输出的结果可以看出，简单型别通过编码后跟其原始的repr()输出结果非常相似。
接着以上例项，我们可以将一个JSON编码的字串转换回一个Python资料结构：
例项(Python 3.0+)
#!/usr/bin/python3 import json # Python 字典型别转换为 JSON 物件 data1 = { 'no' : 1, 'name' : 'itread01', 'url' : 'http://www.itread01.com' } json_str = json.dumps(data1) print ("Python 原始资料：", repr(data1)) print ("JSON 物件：", json_str) # 将 JSON 物件转换为 Python 字典 data2 = json.loads(json_str) print ("data2['name']: ", data2['name']) print ("data2['url']: ", data2['url'])
执行以上程式码输出结果为：
Python 原始资料： {'name': 'itread01', 'no': 1, 'url': 'http://www.itread01.com'} JSON 物件： {"name": "itread01", "no": 1, "url": "http://www.itread01.com"} data2['name']: itread01 data2['url']: http://www.itread01.com
如果你要处理的是档案而不是字串，你可以使用 json.dump() 和 json.load() 来编码和解码JSON资料。例如：
例项(Python 3.0+)
# 写入 JSON 资料 with open('data.json', 'w') as f: json.dump(data, f) # 读取资料 with open('data.json', 'r') as f: data = json.load(f)
更多资料请参考：https://docs.python.org/3/library/json.html

.sidebar-tree .double-li { width:300px; } .sidebar-tree .double-li li { width: 44%; line-height: 1.5em; border-bottom: 1px solid #ccc; float: left; display: inline; }
分类导航
HTML / CSS
HTML 教程
HTML5 教程
CSS 教程
CSS3 教程
JavaScript
JavaScript 教程
jQuery 教程
Node.js 教程
服务端
Python 教程
Python3 教程
Linux 教程
Docker 教程
Ruby 教程
Java 教程
JSP 教程
C 教程
C++ 教程
Perl 教程
Go 教程
PHP 教程
正则表达式
数据库
SQL 教程
MySQL 教程
PostgreSQL 教程
SQLite 教程
MongoDB 教程
Redis 教程
Memcached 教程
行动端
IOS 教程
Swift 教程


Advertisement
Copyright © 2016-2021 IT阅读  Itread01.com All Rights Reserved.
0.001291036605835
