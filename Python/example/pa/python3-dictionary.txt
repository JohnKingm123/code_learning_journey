Python3 字典 - Python3教学
入门教学 -- 学的不仅是技术，更是梦想！
首页
HTML
CSS
JavaScript
jQuery
Python3
Python2
Java
C
C++
Go
SQL
首页
HTML
Search
Python3教学
Python3 教程 Python3 简介 Python3 环境搭建 Python3 基础语法 Python3 基本资料型别 Python3 直译器 Python3 注释 Python3 运算子 Python3 数字(Number) Python3 字串 Python3 列表 Python3 元组 Python3 字典 Python3 集合 Python3 程式设计第一步 Python3 条件控制 Python3 循环语句 Python3 迭代器与生成器 Python3 函式 Python3 资料结构 Python3 模组 Python3 输入和输出 Python3 File 方法 Python3 OS 档案/目录方法 Python3 错误和异常 Python3 面向物件 Python3 名称空间和作用域 Python3 标准库概览 Python3 例项 Python3 正则表示式 Python3 CGI程式设计 Python MySQL – mysql-connector 驱动 Python3 MySQL 数据库连线 – PyMySQL 驱动 Python3 网络程式设计 Python3 SMTP传送邮件 Python3 多执行绪 Python3 XML 解析 Python3 JSON 资料解析 Python3 日期和时间 Python3 内建函式 Python MongoDB Python urllib Python uWSGI 安装配置
ads
HTML 基础
Python3 字典
Python3 字典
字典是另一种可变容器模型，且可储存任意型别物件。
字典的每个键值 key=>value 对用冒号 : 分割，每个对之间用逗号(,)分割，整个字典包括在花括号 {} 中 ,格式如下所示：
d = {key1 : value1, key2 : value2, key3 : value3 }
键必须是唯一的，但值则不必。
值可以取任何资料型别，但键必须是不可变的，如字串，数字。
一个简单的字典例项：
dict = {'name': 'itread01', 'likes': 123, 'url': 'www.itread01.com'}
也可如此建立字典：
dict1 = { 'abc': 456 } dict2 = { 'abc': 123, 98.6: 37 }
访问字典里的值
把相应的键放入到方括号中，如下例项:
例项
#!/usr/bin/python3 dict = {'Name': 'itread01', 'Age': 7, 'Class': 'First'} print ("dict['Name']: ", dict['Name']) print ("dict['Age']: ", dict['Age'])
以上例项输出结果：
dict['Name']: itread01 dict['Age']: 7
如果用字典里没有的键访问资料，会输出错误如下：
例项
#!/usr/bin/python3 dict = {'Name': 'itread01', 'Age': 7, 'Class': 'First'} print ("dict['Alice']: ", dict['Alice'])
以上例项输出结果：
Traceback (most recent call last): File "test.py", line 5, in <module> print ("dict['Alice']: ", dict['Alice']) KeyError: 'Alice'


修改字典
向字典新增新内容的方法是增加新的键/值对，修改或删除已有键/值对如下例项:
例项
#!/usr/bin/python3 dict = {'Name': 'itread01', 'Age': 7, 'Class': 'First'} dict['Age'] = 8 # 更新 Age dict['School'] = "入门教学" # 新增资讯 print ("dict['Age']: ", dict['Age']) print ("dict['School']: ", dict['School'])
以上例项输出结果：
dict['Age']: 8 dict['School']: 入门教学


删除字典元素
能删单一的元素也能清空字典，清空只需一项操作。
显示删除一个字典用del命令，如下例项：
例项
#!/usr/bin/python3 dict = {'Name': 'itread01', 'Age': 7, 'Class': 'First'} del dict['Name'] # 删除键 'Name' dict.clear() # 清空字典 del dict # 删除字典 print ("dict['Age']: ", dict['Age']) print ("dict['School']: ", dict['School'])
但这会引发一个异常，因为用执行 del 操作后字典不再存在：
Traceback (most recent call last): File "test.py", line 9, in <module> print ("dict['Age']: ", dict['Age']) TypeError: 'type' object is not subscriptable
注：del() 方法后面也会讨论。


字典键的特性
字典值可以是任何的 python 物件，既可以是标准的物件，也可以是使用者定义的，但键不行。
两个重要的点需要记住：
1）不允许同一个键出现两次。建立时如果同一个键被赋值两次，后一个值会被记住，如下例项：
例项
#!/usr/bin/python3 dict = {'Name': 'itread01', 'Age': 7, 'Name': '小菜鸟'} print ("dict['Name']: ", dict['Name'])
以上例项输出结果：
dict['Name']: 小菜鸟
2）键必须不可变，所以可以用数字，字串或元组充当，而用列表就不行，如下例项：
例项
#!/usr/bin/python3 dict = {['Name']: 'itread01', 'Age': 7} print ("dict['Name']: ", dict['Name'])
以上例项输出结果：
Traceback (most recent call last): File "test.py", line 3, in <module> dict = {['Name']: 'itread01', 'Age': 7} TypeError: unhashable type: 'list'


字典内建函式&方法
Python字典包含了以下内建函式：
序号
函式及描述
例项
1
len(dict)
计算字典元素个数，即键的总数。
>>> dict = {'Name': 'itread01', 'Age': 7, 'Class': 'First'} >>> len(dict) 3
2
str(dict)
输出字典，以可打印的字串表示。
>>> dict = {'Name': 'itread01', 'Age': 7, 'Class': 'First'} >>> str(dict) "{'Name': 'itread01', 'Class': 'First', 'Age': 7}"
3
type(variable)
返回输入的变数型别，如果变数是字典就返回字典型别。
>>> dict = {'Name': 'itread01', 'Age': 7, 'Class': 'First'} >>> type(dict) <class 'dict'>
Python字典包含了以下内建方法：
序号
函式及描述
1
radiansdict.clear()
删除字典内所有元素
2
radiansdict.copy()
返回一个字典的浅复制
3
radiansdict.fromkeys()
建立一个新字典，以序列seq中元素做字典的键，val为字典所有键对应的初始值
4
radiansdict.get(key, default=None)
返回指定键的值，如果键不在字典中返回 default 设定的预设值
5
key in dict
如果键在字典dict里返回true，否则返回false
6
radiansdict.items()
以列表返回可遍历的(键, 值) 元组阵列
7
radiansdict.keys()
返回一个迭代器，可以使用 list() 来转换为列表
8
radiansdict.setdefault(key, default=None)
和get()类似, 但如果键不存在于字典中，将会新增键并将值设为default
9
radiansdict.update(dict2)
把字典dict2的键/值对更新到dict里
10
radiansdict.values()
返回一个迭代器，可以使用 list() 来转换为列表
11
pop(key[,default])
删除字典给定键 key 所对应的值，返回值为被删除的值。key值必须给出。 否则，返回default值。
12
popitem()
随机返回并删除字典中的最后一对键和值。


.sidebar-tree .double-li { width:300px; } .sidebar-tree .double-li li { width: 44%; line-height: 1.5em; border-bottom: 1px solid #ccc; float: left; display: inline; }
分类导航
HTML / CSS
HTML 教程
HTML5 教程
CSS 教程
CSS3 教程
JavaScript
JavaScript 教程
jQuery 教程
Node.js 教程
服务端
Python 教程
Python3 教程
Linux 教程
Docker 教程
Ruby 教程
Java 教程
JSP 教程
C 教程
C++ 教程
Perl 教程
Go 教程
PHP 教程
正则表达式
数据库
SQL 教程
MySQL 教程
PostgreSQL 教程
SQLite 教程
MongoDB 教程
Redis 教程
Memcached 教程
行动端
IOS 教程
Swift 教程


Advertisement
Copyright © 2016-2021 IT阅读  Itread01.com All Rights Reserved.
0.001291036605835
