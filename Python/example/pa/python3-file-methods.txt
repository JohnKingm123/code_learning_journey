Python3 File 方法 - Python3教学
入门教学 -- 学的不仅是技术，更是梦想！
首页
HTML
CSS
JavaScript
jQuery
Python3
Python2
Java
C
C++
Go
SQL
首页
HTML
Search
Python3教学
Python3 教程 Python3 简介 Python3 环境搭建 Python3 基础语法 Python3 基本资料型别 Python3 直译器 Python3 注释 Python3 运算子 Python3 数字(Number) Python3 字串 Python3 列表 Python3 元组 Python3 字典 Python3 集合 Python3 程式设计第一步 Python3 条件控制 Python3 循环语句 Python3 迭代器与生成器 Python3 函式 Python3 资料结构 Python3 模组 Python3 输入和输出 Python3 File 方法 Python3 OS 档案/目录方法 Python3 错误和异常 Python3 面向物件 Python3 名称空间和作用域 Python3 标准库概览 Python3 例项 Python3 正则表示式 Python3 CGI程式设计 Python MySQL – mysql-connector 驱动 Python3 MySQL 数据库连线 – PyMySQL 驱动 Python3 网络程式设计 Python3 SMTP传送邮件 Python3 多执行绪 Python3 XML 解析 Python3 JSON 资料解析 Python3 日期和时间 Python3 内建函式 Python MongoDB Python urllib Python uWSGI 安装配置
ads
HTML 基础
Python3 File 方法
Python3 File(档案) 方法
open() 方法
Python open() 方法用于开启一个档案，并返回档案物件，在对档案进行处理过程都需要使用到这个函式，如果该档案无法被开启，会丢掷 OSError。
注意：使用 open() 方法一定要保证关闭档案物件，即呼叫 close() 方法。
open() 函式常用形式是接收两个引数：档名(file)和模式(mode)。
open(file, mode='r')
完整的语法格式为：
open(file, mode='r', buffering=-1, encoding=None, errors=None, newline=None, closefd=True, opener=None)
引数说明:
file: 必需，档案路径（相对或者绝对路径）。
mode: 可选，档案开启模式
buffering: 设定缓冲
encoding: 一般使用utf8
errors: 报错级别
newline: 区分换行符
closefd: 传入的file引数型别
opener: 设定自定义开启器，开启器的返回值必须是一个开启的档案描述符。
mode 引数有：
模式
描述
t
文字模式 (预设)。
x
写模式，新建一个档案，如果该档案已存在则会报错。
b
二进位制模式。
+
开启一个档案进行更新(可读可写)。
U
通用换行模式（Python 3 不支援）。
r
以只读方式开启档案。档案的指标将会放在档案的开头。这是预设模式。
rb
以二进位制格式开启一个档案用于只读。档案指标将会放在档案的开头。这是预设模式。一般用于非文字档案如图片等。
r+
开启一个档案用于读写。档案指标将会放在档案的开头。
rb+
以二进位制格式开启一个档案用于读写。档案指标将会放在档案的开头。一般用于非文字档案如图片等。
w
开启一个档案只用于写入。如果该档案已存在则开启档案，并从开头开始编辑，即原有内容会被删除。如果该档案不存在，建立新档案。
wb
以二进位制格式开启一个档案只用于写入。如果该档案已存在则开启档案，并从开头开始编辑，即原有内容会被删除。如果该档案不存在，建立新档案。一般用于非文字档案如图片等。
w+
开启一个档案用于读写。如果该档案已存在则开启档案，并从开头开始编辑，即原有内容会被删除。如果该档案不存在，建立新档案。
wb+
以二进位制格式开启一个档案用于读写。如果该档案已存在则开启档案，并从开头开始编辑，即原有内容会被删除。如果该档案不存在，建立新档案。一般用于非文字档案如图片等。
a
开启一个档案用于追加。如果该档案已存在，档案指标将会放在档案的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该档案不存在，建立新档案进行写入。
ab
以二进位制格式开启一个档案用于追加。如果该档案已存在，档案指标将会放在档案的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该档案不存在，建立新档案进行写入。
a+
开启一个档案用于读写。如果该档案已存在，档案指标将会放在档案的结尾。档案开启时会是追加模式。如果该档案不存在，建立新档案用于读写。
ab+
以二进位制格式开启一个档案用于追加。如果该档案已存在，档案指标将会放在档案的结尾。如果该档案不存在，建立新档案用于读写。
预设为文字模式，如果要以二进位制模式开启，加上 b 。
file 物件
file 物件使用 open 函式来建立，下表列出了 file 物件常用的函式：
序号
方法及描述
1
file.close()
关闭档案。关闭后文件不能再进行读写操作。
2
file.flush()
重新整理档案内部缓冲，直接把内部缓冲区的资料立刻写入档案, 而不是被动的等待输出缓冲区写入。
3
file.fileno()
返回一个整型的档案描述符(file descriptor FD 整型), 可以用在如os模组的read方法等一些底层操作上。
4
file.isatty()
如果档案连线到一个终端装置返回 True，否则返回 False。
5
file.next()
Python 3 中的 File 物件不支援 next() 方法。
返回档案下一行。
6
file.read([size])
从档案读取指定的字节数，如果未给定或为负则读取所有。
7
file.readline([size])
读取整行，包括 "\n" 字元。
8
file.readlines([sizeint])
读取所有行并返回列表，若给定sizeint>0，返回总和大约为sizeint字节的行, 实际读取值可能比 sizeint 较大, 因为需要填充缓冲区。
9
file.seek(offset[, whence])
移动档案读取指标到指定位置
10
file.tell()
返回档案当前位置。
11
file.truncate([size])
从档案的首行首字元开始截断，截断档案为 size 个字元，无 size 表示从当前位置截断；截断之后后面的所有字元被删除，其中 windows 系统下的换行代表2个字元大小。
12
file.write(str)
将字串写入档案，返回的是写入的字元长度。
13
file.writelines(sequence)
向档案写入一个序列字串列表，如果需要换行则要自己加入每行的换行符。


.sidebar-tree .double-li { width:300px; } .sidebar-tree .double-li li { width: 44%; line-height: 1.5em; border-bottom: 1px solid #ccc; float: left; display: inline; }
分类导航
HTML / CSS
HTML 教程
HTML5 教程
CSS 教程
CSS3 教程
JavaScript
JavaScript 教程
jQuery 教程
Node.js 教程
服务端
Python 教程
Python3 教程
Linux 教程
Docker 教程
Ruby 教程
Java 教程
JSP 教程
C 教程
C++ 教程
Perl 教程
Go 教程
PHP 教程
正则表达式
数据库
SQL 教程
MySQL 教程
PostgreSQL 教程
SQLite 教程
MongoDB 教程
Redis 教程
Memcached 教程
行动端
IOS 教程
Swift 教程


Advertisement
Copyright © 2016-2021 IT阅读  Itread01.com All Rights Reserved.
0.001291036605835
